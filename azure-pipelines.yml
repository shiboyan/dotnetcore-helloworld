# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'
  

# variables:
#   buildConfiguration: 'Release'

steps:
- task: DotNetCoreInstaller@0
  inputs:
    version: '2.1.300'
- script: dotnet restore
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'Run the unit test'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
- task: CopyFiles@2
  displayName: 'Copy runsettings file'
  inputs:
    Contents: '**/DotNetCoreHelloWorld/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/FunctionalTests'
    flattenFolders: true
- task: CopyFiles@2
  displayName: 'Copy ARM templates'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    TargetFolder: '$(build.artifactstagingdirectory)'    
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true
- task: DotNetCoreCLI@2
  displayName: 'Publish functional tests'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/FunctionalTests'
    zipAfterPublish: false
    modifyOutputPath: false    
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'     

# - task: CopyFiles@2
#   displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
#   inputs:
#     SourceFolder: '$(Build.SourcesDirectory)'
#     Contents: |
#      **/DotNetCoreHelloWorld/*
#     # Contents: |
#     #  **/*
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'
# - task: ArchiveFiles@2
#   inputs:
#     rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/DotNetCoreHelloWorld' 
#     includeRootFolder: false
#     archiveType: 'zip' # Options: zip, 7z, tar, wim
#     #tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
#     archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' 
    #replaceExistingArchive: true 
    #verbose: # Optional
    #quiet: # Optional    
# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
  
# - task: AzureRmWebAppDeployment@4
#   displayName: 'Deploy code to webapp'
#   inputs:
#     azureSubscription: 'minadote'
#     # WebAppName: 'minadot10086'
#     WebAppName: 'minahow'
#     packageForLinux: $(System.ArtifactsDirectory)/*.zip
#     # Package: $(System.DefaultWorkingDirectory)/**/*.zip            


